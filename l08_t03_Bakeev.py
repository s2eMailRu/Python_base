# ----------   Урок # 8   ООП. Шаг третий  -----------
# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
# пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента
# и вносить его в список, только если введено число. Класс-исключение должен не позволить
# пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.

class MyExcptn(Exception):
    def __init__(self, txt):
        self.txt = txt

whole_input = []
numberes = []
el = ''
i = 0

while el.upper() != 'STOP':
    try:
        el = input("\tДля выхода наберите 'stop'\n\tВведите число\n")
        whole_input.append(el)
        print(f'Здесь собрано все (абсолютно все) что Вы ввели: {whole_input}')
        em = el[1:] if el[0:1] == '-' else el
            #print (el[1:])
        if em.isdigit():
            #k = 0 - int(em)
            numberes.append(- int(em)) if el[0:1] == '-' else numberes.append(int(em))
        else:
            raise MyExcptn('\tБудьте внимательны! Старайтесь вводить числа!')
        i += 1
        if i > 20: # страховка от ухода в бесконечность
            print('\tМноговато будет! END')
            break
    except (Exception, MyExcptn) as err:
        print(err)
    print(f'Здесь отобраны числа из всего того, что Вы ввели: {numberes}')




